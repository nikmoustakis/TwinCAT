<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Mover" Id="{738d1052-5948-409a-8668-cd35ee69a7c9}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Mover
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR
	//Mover State
	State : INT;
	
	
	//Inputs
	In_VacuumON : BOOL;
	
	//Outputs
	Out_Vacuum : BOOL;
	Out_Blower     : BOOL; 
	
	//Simulation Timer 
	Sim_Time : TON ;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="M_MoveToPickPos" Id="{952ccdf3-d13f-49e7-ad79-0f010f94eca8}">
      <Declaration><![CDATA[METHOD M_MoveToPickPos : BOOL
VAR_INPUT
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[//If Mover1 then PickFromCassette; if Mover2  PickFromBuffer

State := E_MoverTransitionState.Picking;


Sim_Time(IN := TRUE, PT := T#1S);

IF Sim_Time.Q THEN       //We assume in 1 seconds we go to Pick position; CassettePos for Mover1, BufferPos for Mover2
	Sim_Time(IN := FALSE);
	State := E_MoverFixedState.InPickedPos;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_MoveToPlacePos" Id="{96ac3d02-28b3-4580-b444-70211e686c53}">
      <Declaration><![CDATA[METHOD M_MoveToPlacePos : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//If Mover1 then PlaceToCarrier; if Mover2  PlaceToBuffer
State := E_MoverTransitionState.Placing;


Sim_Time(IN := TRUE, PT := T#1S);

IF Sim_Time.Q THEN   //We assume in 1 seconds we go to Pick position; BufferPos for Mover1, CarrierPos for Mover2
	Sim_Time(IN := FALSE);
	State := E_MoverFixedState.InPlacedPos;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_PickPart" Id="{508c54f0-ab18-44f7-b3fc-ce97a76918cf}">
      <Declaration><![CDATA[METHOD M_PickPart : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Out_Blower := FALSE;
Out_Vacuum := TRUE;

Sim_Time(IN := Out_Vacuum, PT := T#100MS);


In_VacuumON := Sim_Time.Q; //We assume when Out_vacuum is TRUE, In_Vacuum feedback becomes true after 100ms

State := E_MoverTransitionState.Picking;



IF In_VacuumON THEN 
	State := E_MoverFixedState.PartPicked;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_PlacePart" Id="{ac36852f-3b3e-4b3c-ad85-4335c7f190aa}">
      <Declaration><![CDATA[METHOD M_PlacePart : BOOL
VAR_INPUT
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[Out_Blower := TRUE;
Out_Vacuum := FALSE;

Sim_Time(IN := NOT Out_Vacuum, PT := T#100MS);


In_VacuumON := Sim_Time.Q; //We assume when Out_vacuum is FALSE, In_Vacuum feedback becomes FALSE after 100ms

State := E_MoverTransitionState.Placing;



IF NOT In_VacuumON THEN 
	State := E_MoverFixedState.PartPlaced;
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Mover">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.M_MoveToPickPos">
      <LineId Id="10" Count="1" />
      <LineId Id="5" Count="0" />
      <LineId Id="16" Count="1" />
      <LineId Id="6" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="20" Count="1" />
    </LineIds>
    <LineIds Name="FB_Mover.M_MoveToPlacePos">
      <LineId Id="12" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="19" Count="6" />
      <LineId Id="16" Count="0" />
    </LineIds>
    <LineIds Name="FB_Mover.M_PickPart">
      <LineId Id="14" Count="0" />
      <LineId Id="5" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="16" Count="4" />
      <LineId Id="15" Count="0" />
      <LineId Id="25" Count="1" />
    </LineIds>
    <LineIds Name="FB_Mover.M_PlacePart">
      <LineId Id="28" Count="2" />
      <LineId Id="43" Count="4" />
      <LineId Id="36" Count="5" />
      <LineId Id="6" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>